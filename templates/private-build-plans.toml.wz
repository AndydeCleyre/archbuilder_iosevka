@require(charvars, spacings, custom_weights, use_custom_weights, contextual_widths)
@#
@(
    if isinstance(use_custom_weights, str):
        use_custom_weights = use_custom_weights.lower() in ('yes', 'true')
    if isinstance(contextual_widths, str):
        contextual_widths = contextual_widths.lower() in ('yes', 'true')
        contextual_widths = str(contextual_widths).lower()
)\
@for spacing in spacings:
@(
    plan = '-'.join(filter(None, ('iosevka', spacing, 'custom')))
    family = plan.replace('-', ' ').title()
)\
@#
[buildPlans.@plan]
family = "@family"
export-glyph-names = false
build-texture-feature = @contextual_widths
@if spacing:
spacing = "@spacing"
@end

[buildPlans.@{plan}.ligations]
inherits = "dlig"
# disables = []
# enables = []

# [buildPlans.@{plan}.variants]
# inherits = "ss16"

[buildPlans.@{plan}.variants.design]
@for char, style in charvars.items():
@char = "@style"
@end

# Override above variants for each slope:
# [buildPlans.@{plan}.variants.upright]
# [buildPlans.@{plan}.variants.italic]
# [buildPlans.@{plan}.variants.oblique]

@if use_custom_weights:
@for name, weight in custom_weights.items():
[buildPlans.@{plan}.weights.@{name}]
shape = @weight['override']
menu = @weight['default']
css = @weight['default']

@end
@end
@end
