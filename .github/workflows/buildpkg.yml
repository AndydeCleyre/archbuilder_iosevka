name: Build and upload Arch Linux packages
on:
  push:
    tags:
      - 'r[0-9]*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: create and update build ctnr from official repos
        run: |
          buildah from --name ctnr archlinux
          buildah run ctnr pacman --noconfirm -Syu
          buildah run ctnr pacman --noconfirm -S --needed base-devel git

      - name: add non-root user to build ctnr
        run: |
          buildah run ctnr useradd -m dev
          buildah run ctnr sh -c 'printf "%s\n" "dev ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers.d/dev'

      - name: build and install AUR dep ttfautohint
        run: |
          buildah config -u dev ctnr
          buildah run ctnr gpg --keyserver keys.gnupg.net --recv-keys 58E0C111E39F5408C5D3EC76C1A60EACE707FDA5
          buildah run ctnr git clone https://aur.archlinux.org/ttfautohint /home/dev/ttfautohint
          buildah config --workingdir /home/dev/ttfautohint ctnr
          buildah run ctnr makepkg --noconfirm -si

      - name: install templating tools
        run: |
          python3 -m pip install -U pip setuptools wheel
          python3 -m pip install -r requirements.txt
          printf '%s\n' "$HOME/.local/bin" >>$GITHUB_PATH

      - name: render PKGBUILDs
        run: ./mk/pkgbuilds.sh

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: copy ttf-iosevka-term-custom-git PKGBUILD into build ctnr
        run: |
          buildah copy --chown dev ctnr pkgs/ttf-iosevka-term-custom-git /home/dev/ttf-iosevka-term-custom-git

      - name: build and siphon ttf-iosevka-term-custom-git from build ctnr, setting PKG to artifact filename
        run: |
          buildah config -u dev --workingdir /home/dev/ttf-iosevka-term-custom-git ctnr
          buildah run ctnr makepkg --noconfirm -s

          buildah run ctnr ls -l

          pkg="$(buildah run ctnr sh -c "printf '%s\n' *.pkg.*")"
          buildah run ctnr cat "$pkg" >"$pkg"

          printf '%s\n' "PKG=$pkg" >>$GITHUB_ENV

      - name: upload pkg as release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PKG }}
          asset_name: ${{ env.PKG }}
          asset_content_type: application/zip

